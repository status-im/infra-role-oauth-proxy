---
version: '3.7'
services:
  oauth:
    container_name: '{{ oauth_cont_name }}'
    image: '{{ oauth_cont_image }}'
    restart: always
    ports:
      - '{{ oauth_local_addr }}:{{ oauth_local_port }}:{{ oauth_local_port | mandatory }}/tcp'
    extra_hosts: {{ oauth_cont_etc_hosts | to_json }}
{% if oauth_cont_volumes %}
    volumes: {{ oauth_cont_volumes | to_json }}
{% endif %}
{% if oauth_cont_networks %}
    networks: {{ oauth_cont_networks | to_json }}
{% endif %}
    command: |
      --provider='{{ oauth_provider }}'
{% if oauth_provider == "github" %}
      --github-org='{{ oauth_github_org | mandatory }}'
      --scope='{{ oauth_scope }}'
      --email-domain='*'
{% if (oauth_github_teams|length) > 0 %}
      --github-team='{{ oauth_github_teams | join(",") }}'
{% endif %}
{% elif oauth_provider == "google" %}
      --email-domain='{{ oauth_google_domain | mandatory }}'
{% elif oauth_provider == "keycloak" %}
      --scope='{{ oauth_scope }}'
      --login-url='{{ oauth_keycloak_login_url }}'
      --redeem-url='{{ oauth_keycloak_redeem_url }}'
      --profile-url='{{ oauth_keycloak_profile_url }}'
      --validate-url='{{ oauth_keycloak_validate_url }}'
      --email-domain='{{ oauth_keycloak_domain | mandatory }}'
{% for group in oauth_keycloak_groups %}
      --keycloak-group={{ group }}
{% endfor %}
{% for role in oauth_keycloak_roles %}
      --allowed-role={{ role }}
{% endfor %}
{% endif %}
      --cookie-domain='{{ oauth_domain }}'
      --cookie-secret='{{ oauth_cookie_secret | mandatory }}'
      --client-id='{{ oauth_id | mandatory }}'
      --client-secret='{{ oauth_secret | mandatory }}'
      --redirect-url='https://{{ oauth_domain }}{{ oauth_callback }}'
      --http-address='0.0.0.0:{{ oauth_local_port | mandatory }}'
      --upstream='{{ oauth_upstream_url | mandatory }}'
{% if oauth_logo_url %}
      --custom-sign-in-logo={{ oauth_logo_url | mandatory }}
{% endif %}
      --request-logging=false
      --reverse-proxy=true
{% for route in oauth_skip_auth_routes %}
      --skip-auth-route={{ route }}
{% endfor %}
{% if oauth_cont_networks %}

networks:
{% for network in oauth_cont_networks %}
  {{network}}:
    external: true
{% endfor %}
{% endif %}
